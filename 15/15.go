package main

import "fmt"

/*
Рассмотреть следующий код и ответить на вопросы: к каким негативным последствиям он может привести и как это исправить?

Приведите корректный пример реализации.

var justString string

func someFunc() {
  v := createHugeString(1 &lt;&lt; 10)
  justString = v[:100]
}

func main() {
  someFunc()
}
*/

// Проблема во фрагменте: утечка памяти через срез!
//Когда передся подстрока v[:100], новая строка не копирует данные полностью.
//Вместо этого она ссылается на тот же массив, что и исходная строка v.
//justString содержит только 100 символов, но удерживает ссылку на всю строку размером 1024 байта.
//Пока justString существует (глобальная переменная), вся большая строка не может быть удалена сборщиком мусора.
//значит ! если нужен всего 1% данных — удерживается 100% памяти!

var justString string

func createHugeString(size int) string {
	// Создание строки - для примера используем простое повторение символа
	return string(make([]byte, size))
}

func someFunc() {
	v := createHugeString(1 << 10)
	// justString = v[:100]         // неправильно! произойдет утечка памяти!
	justString = string([]rune(v)[:100])
}

func main() {
	someFunc()
	fmt.Println("Длина строки:", len(justString))
}
